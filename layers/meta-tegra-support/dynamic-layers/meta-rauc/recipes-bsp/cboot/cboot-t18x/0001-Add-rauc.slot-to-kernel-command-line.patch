From 82253d65c6a06702fff991160d12c397a0cc8f88 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Wed, 12 May 2021 12:17:33 -0700
Subject: [PATCH] Add rauc.slot to kernel command line

Signed-off-by: Matt Madison <matt@madison.systems>
---
 .../lib/linuxboot/t186/linuxboot_helper.c     | 25 +++++++++++++++++++
 1 file changed, 25 insertions(+)

Index: cboot-t18x-32.5.0/bootloader/partner/t18x/common/lib/linuxboot/t186/linuxboot_helper.c
===================================================================
--- cboot-t18x-32.5.0.orig/bootloader/partner/t18x/common/lib/linuxboot/t186/linuxboot_helper.c
+++ cboot-t18x-32.5.0/bootloader/partner/t18x/common/lib/linuxboot/t186/linuxboot_helper.c
@@ -267,6 +267,30 @@ static int add_boot_slot_suffix(char *cm
 	return tegrabl_snprintf(cmdline, len, "%s=%s ", param, slot_suffix);
 }
 
+static int add_rauc_slot(char *, int, char *, void *) __attribute__ ((unused));
+static int add_rauc_slot(char *cmdline, int len, char *param, void *priv)
+{
+	tegrabl_error_t status;
+	uint32_t slot;
+
+	TEGRABL_UNUSED(priv);
+
+	if (!cmdline || !param) {
+		return TEGRABL_ERROR(TEGRABL_ERR_INVALID, 0);
+	}
+
+	status = tegrabl_a_b_get_active_slot(NULL, &slot);
+	/*
+	 * We'll get an error if redundancy not enabled;
+	 * just default to slot A in that case.
+	 */
+	if (status != TEGRABL_NO_ERROR)
+		slot = BOOT_SLOT_A;
+
+	/* Add slot_suffix to cmdline*/
+	return tegrabl_snprintf(cmdline, len, "%s=%c ", param, (slot == BOOT_SLOT_B ? 'b' : 'a'));
+}
+
 static int add_ratchet_values(char *cmdline, int len, char *param, void *priv)
 {
 	/* Format
@@ -560,6 +584,7 @@ static struct tegrabl_linuxboot_param ex
 #if defined(CONFIG_ENABLE_A_B_SLOT)
 #if defined(CONFIG_OS_IS_L4T)
 	{ "boot.slot_suffix", add_boot_slot_suffix, NULL },
+	{ "rauc.slot", add_rauc_slot, NULL },
 	{ "boot.ratchetvalues", add_ratchet_values, NULL },
 #else
 	{ "androidboot.slot_suffix", add_boot_slot_suffix, NULL },
